@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "com.phil.cardgame.controller.GameController",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_3439899 { 
   	label=phil
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_1042137717 { 
   	label=cardgame
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   Card1888451203[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Card</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   rank: Ranks [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   suit: Suits [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Card): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Game1888451203[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Game</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   gameDeck: List&lt;Card&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   players: Map&lt;String, Player&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   round: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addDeck(deck: Deck)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addPlayer(email: String, player: Player)</TD></TR>
<TR><TD ALIGN="LEFT" >+ dealToPlayer(email: String, number: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPlayer(email: String): Player</TD></TR>
<TR><TD ALIGN="LEFT" >+ nextRound()</TD></TR>
<TR><TD ALIGN="LEFT" >+ removePlayer(email: String): Player</TD></TR>
<TR><TD ALIGN="LEFT" >+ showDeck(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ useCards(number: int): List&lt;Card&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GameController1301179522[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GameController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   service: GameService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addPlayer(gameId: long, player_id: String): ResponseEntity&lt;Player&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ createGame(): ResponseEntity&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ dealCard(gameId: long, playerId: String): ResponseEntity&lt;Integer&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ dealCards(gameId: long, playerId: String, numberOfCardsRequested: int): ResponseEntity&lt;Integer&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteGame(gameId: long): ResponseEntity&lt;Game&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHand(gameId: long, playerId: String): ResponseEntity&lt;List&lt;Card&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPlayers(gameId: long): ResponseEntity&lt;Map&lt;String, Integer&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUndealtCards(gameId: long): ResponseEntity&lt;Map&lt;String, Integer&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ removePlayer(gameId: long, playerId: String): ResponseEntity&lt;Player&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GameRepository1680415696[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GameRepository</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   games: HashMap&lt;Long, Game&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   nextId: AtomicLong [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addGame(game: Game): long</TD></TR>
<TR><TD ALIGN="LEFT" >+ getGame(id: long): Game</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeGame(id: long): Game</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GameService1212360817[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GameService</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   MAX_HAND_SIZE: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   gameRepository: GameRepository [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addDeckToGame(gameId: long, deck: Deck)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addPlayerToGame(gameId: long, playerId: String): Player</TD></TR>
<TR><TD ALIGN="LEFT" >+ createDeck(): Deck</TD></TR>
<TR><TD ALIGN="LEFT" >+ createGame(): long</TD></TR>
<TR><TD ALIGN="LEFT" >+ dealToPlayer(gameId: long, playerId: String, numberRequested: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteGame(id: long): Game</TD></TR>
<TR><TD ALIGN="LEFT" >+ findGame(id: long): Game</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPlayerInGame(gameId: long, playerId: String): Player</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHandValue(gameId: long, playerId: String): long</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPlayerCards(gameId: long, playerId: String): List&lt;Card&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPlayersWithHandTotals(gameId: long): Map&lt;String, Integer&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUndealtCards(gameId: long): Map&lt;String, Integer&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ removePlayerFromGame(gameId: long, playerId: String): Player</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Player1888451203[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Player</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   email: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   hand: List&lt;Card&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addCard(card: Card): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCards(cards: List&lt;Card&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Player): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeCard(card: Card): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ showHand()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
Game1888451203 -> Card1888451203[label="gameDeck
[0..*]"];
Game1888451203 -> Player1888451203[label="players
[0..*]"];
GameController1301179522 -> GameService1212360817[label="service
[1]"];
GameRepository1680415696 -> Game1888451203[label="games
[0..*]"];
GameService1212360817 -> GameRepository1680415696[label="gameRepository
[1]"];
GameService1212360817 -> Player1888451203[label="dealToPlayer() -> addCards()"];
Player1888451203 -> Card1888451203[label="hand
[0..*]"];
    
}
@enduml